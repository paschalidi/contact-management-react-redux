// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardComponent renders children correctly 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(EditContact)>
    <EditContact
      addNewContact={[Function]}
      deleteContact={[Function]}
      editContact={[Function]}
      updateContact={[Function]}
    >
      <div
        className="container-edit-contact"
      >
        <div
          className="col-md-6"
        >
          <div
            className="panel panel-default"
          >
            <div
              className="panel-heading"
            >
              <h3
                className="panel-title"
              >
                Edit Contact
              </h3>
            </div>
            <div
              className="panel-body"
            >
              <Connect(ReduxForm)
                onSubmit={[Function]}
              >
                <ReduxForm
                  dispatch={[Function]}
                  onSubmit={[Function]}
                >
                  <Connect(Form(EditForm))
                    destroyOnUnmount={true}
                    dispatch={[Function]}
                    enableReinitialize={true}
                    forceUnregisterOnUnmount={false}
                    form="editFromState"
                    getFormState={[Function]}
                    keepDirtyOnReinitialize={false}
                    onSubmit={[Function]}
                    persistentSubmitErrors={false}
                    pure={true}
                    shouldAsyncValidate={[Function]}
                    shouldValidate={[Function]}
                    touchOnBlur={true}
                    touchOnChange={false}
                    validate={[Function]}
                  >
                    <Form(EditForm)
                      anyTouched={false}
                      array={
                        Object {
                          "insert": [Function],
                          "move": [Function],
                          "pop": [Function],
                          "push": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "splice": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      arrayInsert={[Function]}
                      arrayMove={[Function]}
                      arrayPop={[Function]}
                      arrayPush={[Function]}
                      arrayRemove={[Function]}
                      arrayRemoveAll={[Function]}
                      arrayShift={[Function]}
                      arraySplice={[Function]}
                      arraySwap={[Function]}
                      arrayUnshift={[Function]}
                      asyncValidating={false}
                      autofill={[Function]}
                      blur={[Function]}
                      change={[Function]}
                      clearAsyncError={[Function]}
                      clearSubmit={[Function]}
                      clearSubmitErrors={[Function]}
                      destroy={[Function]}
                      destroyOnUnmount={true}
                      dirty={false}
                      dispatch={[Function]}
                      enableReinitialize={true}
                      focus={[Function]}
                      forceUnregisterOnUnmount={false}
                      form="editFromState"
                      getFormState={[Function]}
                      initialize={[Function]}
                      initialized={false}
                      invalid={true}
                      keepDirtyOnReinitialize={false}
                      onSubmit={[Function]}
                      persistentSubmitErrors={false}
                      pristine={true}
                      pure={true}
                      registerField={[Function]}
                      registeredFields={
                        Object {
                          "email": Object {
                            "count": 1,
                            "name": "email",
                            "type": "Field",
                          },
                          "firstName": Object {
                            "count": 1,
                            "name": "firstName",
                            "type": "Field",
                          },
                          "lastName": Object {
                            "count": 1,
                            "name": "lastName",
                            "type": "Field",
                          },
                        }
                      }
                      reset={[Function]}
                      setSubmitFailed={[Function]}
                      setSubmitSucceeded={[Function]}
                      shouldAsyncValidate={[Function]}
                      shouldValidate={[Function]}
                      startAsyncValidation={[Function]}
                      startSubmit={[Function]}
                      stopAsyncValidation={[Function]}
                      stopSubmit={[Function]}
                      submit={[Function]}
                      submitFailed={false}
                      submitSucceeded={false}
                      submitting={false}
                      syncErrors={
                        Object {
                          "email": <div
                            className="alert alert-danger margin-top"
                            role="alert"
                        >
                            Required
                        </div>,
                          "firstName": <div
                            className="alert alert-danger margin-top"
                            role="alert"
                        >
                            Required
                        </div>,
                          "lastName": <div
                            className="alert alert-danger margin-top"
                            role="alert"
                        >
                            Required
                        </div>,
                        }
                      }
                      syncWarnings={Object {}}
                      touch={[Function]}
                      touchOnBlur={true}
                      touchOnChange={false}
                      unregisterField={[Function]}
                      untouch={[Function]}
                      updateSyncErrors={[Function]}
                      updateSyncWarnings={[Function]}
                      valid={false}
                      validExceptSubmit={false}
                      validate={[Function]}
                      values={Object {}}
                    >
                      <EditForm
                        anyTouched={false}
                        array={
                          Object {
                            "insert": [Function],
                            "move": [Function],
                            "pop": [Function],
                            "push": [Function],
                            "remove": [Function],
                            "removeAll": [Function],
                            "shift": [Function],
                            "splice": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                          }
                        }
                        asyncValidate={[Function]}
                        asyncValidating={false}
                        autofill={[Function]}
                        blur={[Function]}
                        change={[Function]}
                        clearAsyncError={[Function]}
                        clearSubmit={[Function]}
                        clearSubmitErrors={[Function]}
                        destroy={[Function]}
                        dirty={false}
                        dispatch={[Function]}
                        form="editFromState"
                        handleSubmit={[Function]}
                        initialize={[Function]}
                        initialized={false}
                        invalid={true}
                        onSubmit={[Function]}
                        pristine={true}
                        pure={true}
                        reset={[Function]}
                        submit={[Function]}
                        submitFailed={false}
                        submitSucceeded={false}
                        submitting={false}
                        touch={[Function]}
                        untouch={[Function]}
                        valid={false}
                        validate={[Function]}
                      >
                        <form
                          onSubmit={[Function]}
                        >
                          <Field
                            component={[Function]}
                            label="First Name"
                            name="firstName"
                            type="text"
                          >
                            <Connect(ConnectedField)
                              _reduxForm={
                                Object {
                                  "anyTouched": false,
                                  "array": Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  },
                                  "arrayInsert": [Function],
                                  "arrayMove": [Function],
                                  "arrayPop": [Function],
                                  "arrayPush": [Function],
                                  "arrayRemove": [Function],
                                  "arrayRemoveAll": [Function],
                                  "arrayShift": [Function],
                                  "arraySplice": [Function],
                                  "arraySwap": [Function],
                                  "arrayUnshift": [Function],
                                  "asyncErrors": undefined,
                                  "asyncValidate": [Function],
                                  "asyncValidating": false,
                                  "autofill": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "clearAsyncError": [Function],
                                  "clearSubmit": [Function],
                                  "clearSubmitErrors": [Function],
                                  "destroy": [Function],
                                  "destroyOnUnmount": true,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "enableReinitialize": true,
                                  "error": undefined,
                                  "focus": [Function],
                                  "forceUnregisterOnUnmount": false,
                                  "form": "editFromState",
                                  "getFormState": [Function],
                                  "getValues": [Function],
                                  "initialValues": undefined,
                                  "initialize": [Function],
                                  "initialized": false,
                                  "invalid": false,
                                  "keepDirtyOnReinitialize": false,
                                  "onSubmit": [Function],
                                  "persistentSubmitErrors": false,
                                  "pristine": true,
                                  "pure": true,
                                  "register": [Function],
                                  "registerField": [Function],
                                  "registerInnerOnSubmit": [Function],
                                  "registeredFields": undefined,
                                  "reset": [Function],
                                  "sectionPrefix": undefined,
                                  "setSubmitFailed": [Function],
                                  "setSubmitSucceeded": [Function],
                                  "shouldAsyncValidate": [Function],
                                  "shouldValidate": [Function],
                                  "startAsyncValidation": [Function],
                                  "startSubmit": [Function],
                                  "stopAsyncValidation": [Function],
                                  "stopSubmit": [Function],
                                  "submit": [Function],
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "syncErrors": Object {},
                                  "syncWarnings": Object {},
                                  "touch": [Function],
                                  "touchOnBlur": true,
                                  "touchOnChange": false,
                                  "triggerSubmit": undefined,
                                  "unregister": [Function],
                                  "unregisterField": [Function],
                                  "untouch": [Function],
                                  "updateSyncErrors": [Function],
                                  "updateSyncWarnings": [Function],
                                  "valid": true,
                                  "validExceptSubmit": true,
                                  "validate": [Function],
                                  "values": Object {},
                                  "warning": undefined,
                                }
                              }
                              component={[Function]}
                              label="First Name"
                              name="firstName"
                              normalize={[Function]}
                              type="text"
                            >
                              <ConnectedField
                                _reduxForm={
                                  Object {
                                    "anyTouched": false,
                                    "array": Object {
                                      "insert": [Function],
                                      "move": [Function],
                                      "pop": [Function],
                                      "push": [Function],
                                      "remove": [Function],
                                      "removeAll": [Function],
                                      "shift": [Function],
                                      "splice": [Function],
                                      "swap": [Function],
                                      "unshift": [Function],
                                    },
                                    "arrayInsert": [Function],
                                    "arrayMove": [Function],
                                    "arrayPop": [Function],
                                    "arrayPush": [Function],
                                    "arrayRemove": [Function],
                                    "arrayRemoveAll": [Function],
                                    "arrayShift": [Function],
                                    "arraySplice": [Function],
                                    "arraySwap": [Function],
                                    "arrayUnshift": [Function],
                                    "asyncErrors": undefined,
                                    "asyncValidate": [Function],
                                    "asyncValidating": false,
                                    "autofill": [Function],
                                    "blur": [Function],
                                    "change": [Function],
                                    "clearAsyncError": [Function],
                                    "clearSubmit": [Function],
                                    "clearSubmitErrors": [Function],
                                    "destroy": [Function],
                                    "destroyOnUnmount": true,
                                    "dirty": false,
                                    "dispatch": [Function],
                                    "enableReinitialize": true,
                                    "error": undefined,
                                    "focus": [Function],
                                    "forceUnregisterOnUnmount": false,
                                    "form": "editFromState",
                                    "getFormState": [Function],
                                    "getValues": [Function],
                                    "initialValues": undefined,
                                    "initialize": [Function],
                                    "initialized": false,
                                    "invalid": false,
                                    "keepDirtyOnReinitialize": false,
                                    "onSubmit": [Function],
                                    "persistentSubmitErrors": false,
                                    "pristine": true,
                                    "pure": true,
                                    "register": [Function],
                                    "registerField": [Function],
                                    "registerInnerOnSubmit": [Function],
                                    "registeredFields": undefined,
                                    "reset": [Function],
                                    "sectionPrefix": undefined,
                                    "setSubmitFailed": [Function],
                                    "setSubmitSucceeded": [Function],
                                    "shouldAsyncValidate": [Function],
                                    "shouldValidate": [Function],
                                    "startAsyncValidation": [Function],
                                    "startSubmit": [Function],
                                    "stopAsyncValidation": [Function],
                                    "stopSubmit": [Function],
                                    "submit": [Function],
                                    "submitFailed": false,
                                    "submitSucceeded": false,
                                    "submitting": false,
                                    "syncErrors": Object {},
                                    "syncWarnings": Object {},
                                    "touch": [Function],
                                    "touchOnBlur": true,
                                    "touchOnChange": false,
                                    "triggerSubmit": undefined,
                                    "unregister": [Function],
                                    "unregisterField": [Function],
                                    "untouch": [Function],
                                    "updateSyncErrors": [Function],
                                    "updateSyncWarnings": [Function],
                                    "valid": true,
                                    "validExceptSubmit": true,
                                    "validate": [Function],
                                    "values": Object {},
                                    "warning": undefined,
                                  }
                                }
                                asyncValidating={false}
                                component={[Function]}
                                dirty={false}
                                dispatch={[Function]}
                                label="First Name"
                                name="firstName"
                                normalize={[Function]}
                                pristine={true}
                                syncError={
                                  <div
                                    className="alert alert-danger margin-top"
                                    role="alert"
                                  >
                                    Required
                                  </div>
                                }
                                type="text"
                              >
                                <renderField
                                  input={
                                    Object {
                                      "name": "firstName",
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onDragStart": [Function],
                                      "onDrop": [Function],
                                      "onFocus": [Function],
                                      "value": "",
                                    }
                                  }
                                  label="First Name"
                                  meta={
                                    Object {
                                      "active": false,
                                      "asyncValidating": false,
                                      "autofilled": false,
                                      "dirty": false,
                                      "dispatch": [Function],
                                      "error": <div
                                        className="alert alert-danger margin-top"
                                        role="alert"
                                    >
                                        Required
                                    </div>,
                                      "form": "editFromState",
                                      "invalid": true,
                                      "pristine": true,
                                      "submitFailed": false,
                                      "submitting": false,
                                      "touched": false,
                                      "valid": false,
                                      "visited": false,
                                      "warning": undefined,
                                    }
                                  }
                                  type="text"
                                >
                                  <div
                                    className="form-group"
                                  >
                                    <label>
                                      First Name
                                    </label>
                                    <div>
                                      <input
                                        className="form-control"
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onDragStart={[Function]}
                                        onDrop={[Function]}
                                        onFocus={[Function]}
                                        placeholder="First Name"
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </renderField>
                              </ConnectedField>
                            </Connect(ConnectedField)>
                          </Field>
                          <Field
                            component={[Function]}
                            label="Last Name"
                            name="lastName"
                            type="text"
                          >
                            <Connect(ConnectedField)
                              _reduxForm={
                                Object {
                                  "anyTouched": false,
                                  "array": Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  },
                                  "arrayInsert": [Function],
                                  "arrayMove": [Function],
                                  "arrayPop": [Function],
                                  "arrayPush": [Function],
                                  "arrayRemove": [Function],
                                  "arrayRemoveAll": [Function],
                                  "arrayShift": [Function],
                                  "arraySplice": [Function],
                                  "arraySwap": [Function],
                                  "arrayUnshift": [Function],
                                  "asyncErrors": undefined,
                                  "asyncValidate": [Function],
                                  "asyncValidating": false,
                                  "autofill": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "clearAsyncError": [Function],
                                  "clearSubmit": [Function],
                                  "clearSubmitErrors": [Function],
                                  "destroy": [Function],
                                  "destroyOnUnmount": true,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "enableReinitialize": true,
                                  "error": undefined,
                                  "focus": [Function],
                                  "forceUnregisterOnUnmount": false,
                                  "form": "editFromState",
                                  "getFormState": [Function],
                                  "getValues": [Function],
                                  "initialValues": undefined,
                                  "initialize": [Function],
                                  "initialized": false,
                                  "invalid": false,
                                  "keepDirtyOnReinitialize": false,
                                  "onSubmit": [Function],
                                  "persistentSubmitErrors": false,
                                  "pristine": true,
                                  "pure": true,
                                  "register": [Function],
                                  "registerField": [Function],
                                  "registerInnerOnSubmit": [Function],
                                  "registeredFields": undefined,
                                  "reset": [Function],
                                  "sectionPrefix": undefined,
                                  "setSubmitFailed": [Function],
                                  "setSubmitSucceeded": [Function],
                                  "shouldAsyncValidate": [Function],
                                  "shouldValidate": [Function],
                                  "startAsyncValidation": [Function],
                                  "startSubmit": [Function],
                                  "stopAsyncValidation": [Function],
                                  "stopSubmit": [Function],
                                  "submit": [Function],
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "syncErrors": Object {},
                                  "syncWarnings": Object {},
                                  "touch": [Function],
                                  "touchOnBlur": true,
                                  "touchOnChange": false,
                                  "triggerSubmit": undefined,
                                  "unregister": [Function],
                                  "unregisterField": [Function],
                                  "untouch": [Function],
                                  "updateSyncErrors": [Function],
                                  "updateSyncWarnings": [Function],
                                  "valid": true,
                                  "validExceptSubmit": true,
                                  "validate": [Function],
                                  "values": Object {},
                                  "warning": undefined,
                                }
                              }
                              component={[Function]}
                              label="Last Name"
                              name="lastName"
                              normalize={[Function]}
                              type="text"
                            >
                              <ConnectedField
                                _reduxForm={
                                  Object {
                                    "anyTouched": false,
                                    "array": Object {
                                      "insert": [Function],
                                      "move": [Function],
                                      "pop": [Function],
                                      "push": [Function],
                                      "remove": [Function],
                                      "removeAll": [Function],
                                      "shift": [Function],
                                      "splice": [Function],
                                      "swap": [Function],
                                      "unshift": [Function],
                                    },
                                    "arrayInsert": [Function],
                                    "arrayMove": [Function],
                                    "arrayPop": [Function],
                                    "arrayPush": [Function],
                                    "arrayRemove": [Function],
                                    "arrayRemoveAll": [Function],
                                    "arrayShift": [Function],
                                    "arraySplice": [Function],
                                    "arraySwap": [Function],
                                    "arrayUnshift": [Function],
                                    "asyncErrors": undefined,
                                    "asyncValidate": [Function],
                                    "asyncValidating": false,
                                    "autofill": [Function],
                                    "blur": [Function],
                                    "change": [Function],
                                    "clearAsyncError": [Function],
                                    "clearSubmit": [Function],
                                    "clearSubmitErrors": [Function],
                                    "destroy": [Function],
                                    "destroyOnUnmount": true,
                                    "dirty": false,
                                    "dispatch": [Function],
                                    "enableReinitialize": true,
                                    "error": undefined,
                                    "focus": [Function],
                                    "forceUnregisterOnUnmount": false,
                                    "form": "editFromState",
                                    "getFormState": [Function],
                                    "getValues": [Function],
                                    "initialValues": undefined,
                                    "initialize": [Function],
                                    "initialized": false,
                                    "invalid": false,
                                    "keepDirtyOnReinitialize": false,
                                    "onSubmit": [Function],
                                    "persistentSubmitErrors": false,
                                    "pristine": true,
                                    "pure": true,
                                    "register": [Function],
                                    "registerField": [Function],
                                    "registerInnerOnSubmit": [Function],
                                    "registeredFields": undefined,
                                    "reset": [Function],
                                    "sectionPrefix": undefined,
                                    "setSubmitFailed": [Function],
                                    "setSubmitSucceeded": [Function],
                                    "shouldAsyncValidate": [Function],
                                    "shouldValidate": [Function],
                                    "startAsyncValidation": [Function],
                                    "startSubmit": [Function],
                                    "stopAsyncValidation": [Function],
                                    "stopSubmit": [Function],
                                    "submit": [Function],
                                    "submitFailed": false,
                                    "submitSucceeded": false,
                                    "submitting": false,
                                    "syncErrors": Object {},
                                    "syncWarnings": Object {},
                                    "touch": [Function],
                                    "touchOnBlur": true,
                                    "touchOnChange": false,
                                    "triggerSubmit": undefined,
                                    "unregister": [Function],
                                    "unregisterField": [Function],
                                    "untouch": [Function],
                                    "updateSyncErrors": [Function],
                                    "updateSyncWarnings": [Function],
                                    "valid": true,
                                    "validExceptSubmit": true,
                                    "validate": [Function],
                                    "values": Object {},
                                    "warning": undefined,
                                  }
                                }
                                asyncValidating={false}
                                component={[Function]}
                                dirty={false}
                                dispatch={[Function]}
                                label="Last Name"
                                name="lastName"
                                normalize={[Function]}
                                pristine={true}
                                syncError={
                                  <div
                                    className="alert alert-danger margin-top"
                                    role="alert"
                                  >
                                    Required
                                  </div>
                                }
                                type="text"
                              >
                                <renderField
                                  input={
                                    Object {
                                      "name": "lastName",
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onDragStart": [Function],
                                      "onDrop": [Function],
                                      "onFocus": [Function],
                                      "value": "",
                                    }
                                  }
                                  label="Last Name"
                                  meta={
                                    Object {
                                      "active": false,
                                      "asyncValidating": false,
                                      "autofilled": false,
                                      "dirty": false,
                                      "dispatch": [Function],
                                      "error": <div
                                        className="alert alert-danger margin-top"
                                        role="alert"
                                    >
                                        Required
                                    </div>,
                                      "form": "editFromState",
                                      "invalid": true,
                                      "pristine": true,
                                      "submitFailed": false,
                                      "submitting": false,
                                      "touched": false,
                                      "valid": false,
                                      "visited": false,
                                      "warning": undefined,
                                    }
                                  }
                                  type="text"
                                >
                                  <div
                                    className="form-group"
                                  >
                                    <label>
                                      Last Name
                                    </label>
                                    <div>
                                      <input
                                        className="form-control"
                                        name="lastName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onDragStart={[Function]}
                                        onDrop={[Function]}
                                        onFocus={[Function]}
                                        placeholder="Last Name"
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </renderField>
                              </ConnectedField>
                            </Connect(ConnectedField)>
                          </Field>
                          <Field
                            component={[Function]}
                            label="mail"
                            name="email"
                            type="text"
                          >
                            <Connect(ConnectedField)
                              _reduxForm={
                                Object {
                                  "anyTouched": false,
                                  "array": Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  },
                                  "arrayInsert": [Function],
                                  "arrayMove": [Function],
                                  "arrayPop": [Function],
                                  "arrayPush": [Function],
                                  "arrayRemove": [Function],
                                  "arrayRemoveAll": [Function],
                                  "arrayShift": [Function],
                                  "arraySplice": [Function],
                                  "arraySwap": [Function],
                                  "arrayUnshift": [Function],
                                  "asyncErrors": undefined,
                                  "asyncValidate": [Function],
                                  "asyncValidating": false,
                                  "autofill": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "clearAsyncError": [Function],
                                  "clearSubmit": [Function],
                                  "clearSubmitErrors": [Function],
                                  "destroy": [Function],
                                  "destroyOnUnmount": true,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "enableReinitialize": true,
                                  "error": undefined,
                                  "focus": [Function],
                                  "forceUnregisterOnUnmount": false,
                                  "form": "editFromState",
                                  "getFormState": [Function],
                                  "getValues": [Function],
                                  "initialValues": undefined,
                                  "initialize": [Function],
                                  "initialized": false,
                                  "invalid": false,
                                  "keepDirtyOnReinitialize": false,
                                  "onSubmit": [Function],
                                  "persistentSubmitErrors": false,
                                  "pristine": true,
                                  "pure": true,
                                  "register": [Function],
                                  "registerField": [Function],
                                  "registerInnerOnSubmit": [Function],
                                  "registeredFields": undefined,
                                  "reset": [Function],
                                  "sectionPrefix": undefined,
                                  "setSubmitFailed": [Function],
                                  "setSubmitSucceeded": [Function],
                                  "shouldAsyncValidate": [Function],
                                  "shouldValidate": [Function],
                                  "startAsyncValidation": [Function],
                                  "startSubmit": [Function],
                                  "stopAsyncValidation": [Function],
                                  "stopSubmit": [Function],
                                  "submit": [Function],
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "syncErrors": Object {},
                                  "syncWarnings": Object {},
                                  "touch": [Function],
                                  "touchOnBlur": true,
                                  "touchOnChange": false,
                                  "triggerSubmit": undefined,
                                  "unregister": [Function],
                                  "unregisterField": [Function],
                                  "untouch": [Function],
                                  "updateSyncErrors": [Function],
                                  "updateSyncWarnings": [Function],
                                  "valid": true,
                                  "validExceptSubmit": true,
                                  "validate": [Function],
                                  "values": Object {},
                                  "warning": undefined,
                                }
                              }
                              component={[Function]}
                              label="mail"
                              name="email"
                              normalize={[Function]}
                              type="text"
                            >
                              <ConnectedField
                                _reduxForm={
                                  Object {
                                    "anyTouched": false,
                                    "array": Object {
                                      "insert": [Function],
                                      "move": [Function],
                                      "pop": [Function],
                                      "push": [Function],
                                      "remove": [Function],
                                      "removeAll": [Function],
                                      "shift": [Function],
                                      "splice": [Function],
                                      "swap": [Function],
                                      "unshift": [Function],
                                    },
                                    "arrayInsert": [Function],
                                    "arrayMove": [Function],
                                    "arrayPop": [Function],
                                    "arrayPush": [Function],
                                    "arrayRemove": [Function],
                                    "arrayRemoveAll": [Function],
                                    "arrayShift": [Function],
                                    "arraySplice": [Function],
                                    "arraySwap": [Function],
                                    "arrayUnshift": [Function],
                                    "asyncErrors": undefined,
                                    "asyncValidate": [Function],
                                    "asyncValidating": false,
                                    "autofill": [Function],
                                    "blur": [Function],
                                    "change": [Function],
                                    "clearAsyncError": [Function],
                                    "clearSubmit": [Function],
                                    "clearSubmitErrors": [Function],
                                    "destroy": [Function],
                                    "destroyOnUnmount": true,
                                    "dirty": false,
                                    "dispatch": [Function],
                                    "enableReinitialize": true,
                                    "error": undefined,
                                    "focus": [Function],
                                    "forceUnregisterOnUnmount": false,
                                    "form": "editFromState",
                                    "getFormState": [Function],
                                    "getValues": [Function],
                                    "initialValues": undefined,
                                    "initialize": [Function],
                                    "initialized": false,
                                    "invalid": false,
                                    "keepDirtyOnReinitialize": false,
                                    "onSubmit": [Function],
                                    "persistentSubmitErrors": false,
                                    "pristine": true,
                                    "pure": true,
                                    "register": [Function],
                                    "registerField": [Function],
                                    "registerInnerOnSubmit": [Function],
                                    "registeredFields": undefined,
                                    "reset": [Function],
                                    "sectionPrefix": undefined,
                                    "setSubmitFailed": [Function],
                                    "setSubmitSucceeded": [Function],
                                    "shouldAsyncValidate": [Function],
                                    "shouldValidate": [Function],
                                    "startAsyncValidation": [Function],
                                    "startSubmit": [Function],
                                    "stopAsyncValidation": [Function],
                                    "stopSubmit": [Function],
                                    "submit": [Function],
                                    "submitFailed": false,
                                    "submitSucceeded": false,
                                    "submitting": false,
                                    "syncErrors": Object {},
                                    "syncWarnings": Object {},
                                    "touch": [Function],
                                    "touchOnBlur": true,
                                    "touchOnChange": false,
                                    "triggerSubmit": undefined,
                                    "unregister": [Function],
                                    "unregisterField": [Function],
                                    "untouch": [Function],
                                    "updateSyncErrors": [Function],
                                    "updateSyncWarnings": [Function],
                                    "valid": true,
                                    "validExceptSubmit": true,
                                    "validate": [Function],
                                    "values": Object {},
                                    "warning": undefined,
                                  }
                                }
                                asyncValidating={false}
                                component={[Function]}
                                dirty={false}
                                dispatch={[Function]}
                                label="mail"
                                name="email"
                                normalize={[Function]}
                                pristine={true}
                                syncError={
                                  <div
                                    className="alert alert-danger margin-top"
                                    role="alert"
                                  >
                                    Required
                                  </div>
                                }
                                type="text"
                              >
                                <renderField
                                  input={
                                    Object {
                                      "name": "email",
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onDragStart": [Function],
                                      "onDrop": [Function],
                                      "onFocus": [Function],
                                      "value": "",
                                    }
                                  }
                                  label="mail"
                                  meta={
                                    Object {
                                      "active": false,
                                      "asyncValidating": false,
                                      "autofilled": false,
                                      "dirty": false,
                                      "dispatch": [Function],
                                      "error": <div
                                        className="alert alert-danger margin-top"
                                        role="alert"
                                    >
                                        Required
                                    </div>,
                                      "form": "editFromState",
                                      "invalid": true,
                                      "pristine": true,
                                      "submitFailed": false,
                                      "submitting": false,
                                      "touched": false,
                                      "valid": false,
                                      "visited": false,
                                      "warning": undefined,
                                    }
                                  }
                                  type="text"
                                >
                                  <div
                                    className="form-group"
                                  >
                                    <label>
                                      mail
                                    </label>
                                    <div>
                                      <input
                                        className="form-control"
                                        name="email"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onDragStart={[Function]}
                                        onDrop={[Function]}
                                        onFocus={[Function]}
                                        placeholder="mail"
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </renderField>
                              </ConnectedField>
                            </Connect(ConnectedField)>
                          </Field>
                          <div>
                            <button
                              className="btn btn-success button-submit"
                              disabled={false}
                              type="submit"
                            >
                              Update
                            </button>
                            <button
                              className="btn btn-default"
                              disabled={true}
                              onClick={[Function]}
                              type="button"
                            >
                              Undo Changes
                            </button>
                          </div>
                        </form>
                      </EditForm>
                    </Form(EditForm)>
                  </Connect(Form(EditForm))>
                </ReduxForm>
              </Connect(ReduxForm)>
            </div>
          </div>
        </div>
      </div>
    </EditContact>
  </Connect(EditContact)>
</Provider>
`;

exports[`CardComponent renders correctly 1`] = `
<div
  className="container-edit-contact"
>
  <div
    className="col-md-6"
  >
    <div
      className="panel panel-default"
    >
      <div
        className="panel-heading"
      >
        <h3
          className="panel-title"
        >
          Edit Contact
        </h3>
      </div>
      <div
        className="panel-body"
      >
        <form
          onSubmit={[Function]}
        >
          <div
            className="form-group"
          >
            <label>
              First Name
            </label>
            <div>
              <input
                className="form-control"
                name="firstName"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                placeholder="First Name"
                type="text"
                value=""
              />
            </div>
          </div>
          <div
            className="form-group"
          >
            <label>
              Last Name
            </label>
            <div>
              <input
                className="form-control"
                name="lastName"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                placeholder="Last Name"
                type="text"
                value=""
              />
            </div>
          </div>
          <div
            className="form-group"
          >
            <label>
              mail
            </label>
            <div>
              <input
                className="form-control"
                name="email"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                placeholder="mail"
                type="text"
                value=""
              />
            </div>
          </div>
          <div>
            <button
              className="btn btn-success"
              disabled={false}
              type="submit"
            >
              Update
            </button>
            <button
              className="btn btn-default"
              disabled={true}
              onClick={[Function]}
              type="button"
            >
              Undo Changes
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>
`;
